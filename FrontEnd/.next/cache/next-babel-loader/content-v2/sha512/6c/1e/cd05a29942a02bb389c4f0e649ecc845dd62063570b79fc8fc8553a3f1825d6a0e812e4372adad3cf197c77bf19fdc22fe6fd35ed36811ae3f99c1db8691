{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\001Study\\\\Year3Therm2\\\\240-311 Distributed\\\\Final-MiniProject\\\\CatBreeds\\\\FrontEnd\\\\pages\\\\searchCat.js\";\nimport Head from 'next/head';\nimport styles from '../styles/Home.module.css';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Autocomplete from '../components/Autocomplete';\nimport Nav from '../components/nav';\nimport Footer from '../components/footer';\nconst URL = `https://api.thecatapi.com/v1/breeds`;\nconst imgURL = `https://api.thecatapi.com/v1/images`;\nvar dataAllName = [];\nexport default function SearchCat() {\n  const {\n    0: cats,\n    1: setCats\n  } = useState([]);\n  const {\n    0: image,\n    1: setImage\n  } = useState({});\n  const {\n    0: find,\n    1: setFind\n  } = useState('');\n  const {\n    0: refimg,\n    1: setRefimg\n  } = useState('');\n  const {\n    0: nameCat,\n    1: setNameCat\n  } = useState('');\n  const {\n    0: temperament,\n    1: setTemperament\n  } = useState('');\n  const {\n    0: origin,\n    1: setOrigin\n  } = useState('');\n  const {\n    0: description,\n    1: setDescription\n  } = useState('');\n  const {\n    0: life_span,\n    1: setLife_span\n  } = useState('');\n  useEffect(() => {\n    getCats();\n  }, []);\n\n  const getImage = async id => {\n    let imp = await axios.get(`${imgURL}/${id}`);\n    setImage(imp.data);\n  };\n\n  const getCats = async () => {\n    let cat = await axios.get(URL);\n    setCats(cat.data);\n  };\n\n  const search = async name => {\n    cats.map((item, index) => {\n      if (name === item.name) {\n        setRefimg(item.reference_image_id);\n        setNameCat(item.name);\n        setTemperament(item.temperament);\n        setOrigin(item.origin);\n        setDescription(item.description);\n        setLife_span(item.life_span);\n        getImage(refimg);\n      }\n    });\n  };\n\n  const printCats = () => {\n    return cats.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Breed: \", item.weight.metric, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => getImage(item.reference_image_id),\n        children: \"Get\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this));\n  };\n\n  const scandName = () => {\n    dataAllName = cats.map(item => item.name); // return (\n    //   cats.map((item,index) => (<li>\n    //     {item.name}\n    //   </li>))\n    // )\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col justify-between fixed\",\n    children: [/*#__PURE__*/_jsxDEV(\"title\", {\n      children: \"Home\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"\",\n      children: [scandName(), /*#__PURE__*/_jsxDEV(Autocomplete, {\n        suggestions: dataAllName\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-screen -mt-3\",\n      children: /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["D:/001Study/Year3Therm2/240-311 Distributed/Final-MiniProject/CatBreeds/FrontEnd/pages/searchCat.js"],"names":["Head","styles","useState","useEffect","axios","Autocomplete","Nav","Footer","URL","imgURL","dataAllName","SearchCat","cats","setCats","image","setImage","find","setFind","refimg","setRefimg","nameCat","setNameCat","temperament","setTemperament","origin","setOrigin","description","setDescription","life_span","setLife_span","getCats","getImage","id","imp","get","data","cat","search","name","map","item","index","reference_image_id","printCats","weight","metric","scandName"],"mappings":"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","sourcesContent":["import Head from 'next/head'\r\nimport styles from '../styles/Home.module.css'\r\nimport { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport Autocomplete from '../components/Autocomplete'\r\nimport Nav from '../components/nav'\r\nimport Footer from '../components/footer'\r\nconst URL = `https://api.thecatapi.com/v1/breeds`\r\nconst imgURL = `https://api.thecatapi.com/v1/images`\r\n\r\nvar dataAllName = []\r\nexport default function SearchCat() {\r\n\r\n  const [cats, setCats] = useState([]);\r\n  const [image, setImage] = useState({});\r\n  const [find, setFind] = useState('');\r\n  const [refimg, setRefimg] = useState('')\r\n  const [nameCat, setNameCat] = useState('')\r\n  const [temperament, setTemperament] = useState('')\r\n  const [origin, setOrigin] = useState('')\r\n  const [description, setDescription] = useState('')\r\n  const [life_span, setLife_span] = useState('')\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    getCats()\r\n  }, []);\r\n\r\n  const getImage = async (id) => {\r\n    let imp = await axios.get(`${imgURL}/${id}`)\r\n    setImage(imp.data)\r\n  }\r\n\r\n  const getCats = async () => {\r\n    let cat = await axios.get(URL)\r\n    setCats(cat.data)\r\n\r\n  }\r\n\r\n  const search = async (name) => {\r\n\r\n    cats.map((item, index) => {\r\n      if (name === item.name) {\r\n        setRefimg(item.reference_image_id)\r\n        setNameCat(item.name)\r\n        setTemperament(item.temperament)\r\n        setOrigin(item.origin)\r\n        setDescription(item.description)\r\n        setLife_span(item.life_span)\r\n        getImage(refimg)\r\n      }\r\n\r\n    })\r\n\r\n  }\r\n\r\n  const printCats = () => {\r\n    return (cats.map((item, index) => (\r\n      <div>\r\n        {/* Test: {item.name} |\r\n        weight: {item.weight.metric}\r\n        <img src={item.image.url} alt=\"\" /> */}\r\n        {/* {(item.name === \"Abyssinian\")?<img src=\"https://cdn2.thecatapi.com/images/0XYvRd7oD.jpg\"/>:\"null\"} */}\r\n        Breed: {item.weight.metric}\r\n        <br />\r\n        {/* Test: {item.image.url} */}\r\n        \r\n\r\n        <button onClick={() => getImage(item.reference_image_id)}>Get</button>\r\n\r\n\r\n      </div>\r\n    )))\r\n  }\r\n\r\n  const scandName = () => {\r\n\r\n    dataAllName = (cats.map((item) => item.name))\r\n\r\n\r\n    // return (\r\n    //   cats.map((item,index) => (<li>\r\n    //     {item.name}\r\n    //   </li>))\r\n    // )\r\n  }\r\n\r\n  return (\r\n\r\n\r\n    <div className=\"flex flex-col justify-between fixed\">\r\n      <title>Home</title>\r\n     \r\n      {/* img: <img src={image.url} width=\"300\" height=\"300\" /> */}\r\n      {/* {printCats()} */}\r\n\r\n      {/* <div>\r\n        <img src={image.url} width=\"300\" height=\"300\" />\r\n        <br></br>\r\n        name: {nameCat}\r\n        <br></br>\r\n        temperament: {temperament}\r\n        <br></br>\r\n        origin: {origin}\r\n        <br></br>\r\n        description: {description}\r\n        <br></br>\r\n        life span: {life_span}\r\n        <br></br>\r\n        Find: <input type=\"text\" onChange={(e) => setFind(e.target.value)}  />\r\n        <button onClick={() => search(find)}>Find!</button>\r\n      </div> */}\r\n\r\n      <div className=''> \r\n\r\n\r\n\r\n        {scandName()}\r\n        <Autocomplete\r\n          suggestions={dataAllName}\r\n        />\r\n\r\n      </div >\r\n\r\n      <div className='w-screen -mt-3'>\r\n          <Footer/>\r\n        </div>\r\n      \r\n\r\n\r\n    </div>\r\n\r\n\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}