{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\001Study\\\\Year3Therm2\\\\240-311 Distributed\\\\Final-MiniProject\\\\CatBreeds\\\\FrontEnd\\\\pages\\\\symptom.js\";\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport Footer from '../components/footer';\nlet nameOfDisease = \" \";\nconst URL = `http://localhost/api/disease`;\n\nconst symptom = () => {\n  const {\n    0: healths,\n    1: setHealths\n  } = useState({\n    \"disease\": [{\n      \"id\": 1,\n      \"name\": \"โรคหวัดแมว\",\n      \"symptom1\": \"อาการเซื่องซึม\",\n      \"symptom2\": \"หายใจลำบาก \",\n      \"symptom3\": \"มีไข้ ไอ จาม มีน้ำมูก\",\n      \"symptom4\": \"เบื่ออาหาร\"\n    }]\n  });\n  const {\n    0: health,\n    1: setHealth\n  } = useState([]);\n  const {\n    0: name,\n    1: setName\n  } = useState('');\n  const {\n    0: symptom1,\n    1: setSymtom1\n  } = useState('');\n  const {\n    0: symptom2,\n    1: setSymtom2\n  } = useState('');\n  const {\n    0: symptom3,\n    1: setSymtom3\n  } = useState('');\n  const {\n    0: symptom4,\n    1: setSymtom4\n  } = useState('');\n  const {\n    0: check1,\n    1: setCheck1\n  } = useState('');\n  const {\n    0: check2,\n    1: setCheck2\n  } = useState('');\n  const {\n    0: check3,\n    1: setCheck3\n  } = useState('');\n  const {\n    0: check4,\n    1: setCheck4\n  } = useState('');\n  useEffect(() => {\n    getDisease();\n  }, []);\n\n  const getDisease = async () => {\n    let disesaseCat = await axios.get(URL);\n    setHealths(disesaseCat.data);\n  };\n\n  const PrintCheckBoxData = () => {\n    let tmp;\n    return healths.disease.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border-pink-500 border-2 w-1/2 h-full\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onChange: e => setCheck1(e.target.value),\n        value: item.symptom1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), \" \", item.symptom1, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onChange: e => setCheck2(e.target.value),\n        value: item.symptom2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), \" \", item.symptom2, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onChange: e => setCheck3(e.target.value),\n        value: item.symptom3\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), \" \", item.symptom3, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"checkbox\",\n        onChange: e => setCheck4(e.target.value),\n        value: item.symptom4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), \" \", item.symptom4, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this));\n  };\n\n  const FindDisease = (dis1, dis2, dis3, dis4) => {\n    let name = [];\n    let arr1 = [];\n    let arr2 = [];\n    let arr3 = [];\n    let arr4 = [];\n    let tmp;\n    let i = 0;\n    name = healths.disease.map(item => item.name);\n    arr1 = healths.disease.map(item => item.symptom1);\n    arr2 = healths.disease.map(item => item.symptom2);\n    arr3 = healths.disease.map(item => item.symptom3);\n    arr4 = healths.disease.map(item => item.symptom4);\n\n    for (i = 0; i < name.length; i++) {\n      if (arr1[i] === dis1 && arr2[i] === dis2 && arr3[i] === dis3 || arr4 === dis4) {\n        nameOfDisease = name[i];\n      } else {\n        nameOfDisease = \"ขออภัยไม่สามารถตรวจเจอโรคในระบบ / กรุณาติ๊กเลือกตามอาการข้างต้น\";\n      }\n    }\n\n    healths.disease.map(item => {\n      if (item.symptom1 === dis1 && item.symptom2 === dis2 && item.symptom3 === dis3 && item.symptom4 === dis4) {\n        tmp = item.name;\n      } else {\n        tmp = \"ไม่เจอโรคในระบบ\";\n      }\n    }); // nameOfDisease = tmp\n  };\n\n  const printDisease = () => {\n    return healths.disease.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [item.name, \" | \", item.symptom1]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 17\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-screen w-screen justify-start items-center border-2 border-red-600 fixed \",\n    children: [\"Hello Symptom\", /*#__PURE__*/_jsxDEV(\"a\", {\n      className: \"font-bold\",\n      children: \"\\u0E41\\u0E21\\u0E27\\u0E02\\u0E2D\\u0E07\\u0E17\\u0E48\\u0E32\\u0E19\\u0E21\\u0E35\\u0E2D\\u0E32\\u0E01\\u0E32\\u0E23\\u0E14\\u0E31\\u0E07\\u0E19\\u0E35\\u0E49\\u0E2B\\u0E23\\u0E37\\u0E2D\\u0E44\\u0E21\\u0E48 \\u0E42\\u0E1B\\u0E23\\u0E14\\u0E15\\u0E34\\u0E4A\\u0E01\\u0E40\\u0E25\\u0E37\\u0E2D\\u0E01\\u0E15\\u0E32\\u0E21\\u0E2D\\u0E32\\u0E01\\u0E32\\u0E23\\u0E02\\u0E49\\u0E32\\u0E07\\u0E15\\u0E49\\u0E19\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center border-2 border-red-800 w-2/4 h-2/3 overflow-auto\",\n      children: [PrintCheckBoxData(), FindDisease(check1, check2, check3, check4)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"font-bold\",\n        children: \"\\u0E41\\u0E21\\u0E27\\u0E02\\u0E2D\\u0E07\\u0E04\\u0E38\\u0E13\\u0E40\\u0E1B\\u0E47\\u0E19\\u0E42\\u0E23\\u0E04 :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 19\n      }, this), \"  \", nameOfDisease]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-screen -mt-8\",\n      children: /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 9\n  }, this);\n};\n\nexport default symptom;","map":{"version":3,"sources":["D:/001Study/Year3Therm2/240-311 Distributed/Final-MiniProject/CatBreeds/FrontEnd/pages/symptom.js"],"names":["axios","useEffect","useState","Footer","nameOfDisease","URL","symptom","healths","setHealths","health","setHealth","name","setName","symptom1","setSymtom1","symptom2","setSymtom2","symptom3","setSymtom3","symptom4","setSymtom4","check1","setCheck1","check2","setCheck2","check3","setCheck3","check4","setCheck4","getDisease","disesaseCat","get","data","PrintCheckBoxData","tmp","disease","map","item","e","target","value","FindDisease","dis1","dis2","dis3","dis4","arr1","arr2","arr3","arr4","i","length","printDisease","index"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AAEA,IAAIC,aAAa,GAAG,GAApB;AACA,MAAMC,GAAG,GAAI,8BAAb;;AACA,MAAMC,OAAO,GAAG,MAAM;AAElB,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBN,QAAQ,CAAC;AACnC,eAAW,CACP;AACI,YAAM,CADV;AAEI,cAAQ,YAFZ;AAGI,kBAAY,gBAHhB;AAII,kBAAY,aAJhB;AAKI,kBAAY,uBALhB;AAMI,kBAAY;AANhB,KADO;AADwB,GAAD,CAAtC;AAYA,QAAM;AAAA,OAACO,MAAD;AAAA,OAASC;AAAT,MAAsBR,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAA,OAACS,IAAD;AAAA,OAAOC;AAAP,MAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAA,OAACW,QAAD;AAAA,OAAWC;AAAX,MAAyBZ,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM;AAAA,OAACa,QAAD;AAAA,OAAWC;AAAX,MAAyBd,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM;AAAA,OAACe,QAAD;AAAA,OAAWC;AAAX,MAAyBhB,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM;AAAA,OAACiB,QAAD;AAAA,OAAWC;AAAX,MAAyBlB,QAAQ,CAAC,EAAD,CAAvC;AAEA,QAAM;AAAA,OAACmB,MAAD;AAAA,OAASC;AAAT,MAAsBpB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAA,OAACqB,MAAD;AAAA,OAASC;AAAT,MAAsBtB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAA,OAACuB,MAAD;AAAA,OAASC;AAAT,MAAsBxB,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAA,OAACyB,MAAD;AAAA,OAASC;AAAT,MAAsB1B,QAAQ,CAAC,EAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ4B,IAAAA,UAAU;AACb,GAFQ,EAEN,EAFM,CAAT;;AAKA,QAAMA,UAAU,GAAG,YAAY;AAC3B,QAAIC,WAAW,GAAG,MAAM9B,KAAK,CAAC+B,GAAN,CAAU1B,GAAV,CAAxB;AACAG,IAAAA,UAAU,CAACsB,WAAW,CAACE,IAAb,CAAV;AACH,GAHD;;AAKA,QAAMC,iBAAiB,GAAG,MAAM;AAE5B,QAAIC,GAAJ;AACA,WAAQ3B,OAAO,CAAC4B,OAAR,CAAgBC,GAAhB,CAAqBC,IAAD,iBAExB;AAAK,MAAA,SAAS,EAAC,uCAAf;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,QAAQ,EAAGC,CAAD,IAAOhB,SAAS,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjD;AAAmE,QAAA,KAAK,EAAEH,IAAI,CAACxB;AAA/E;AAAA;AAAA;AAAA;AAAA,cADJ,OACiGwB,IAAI,CAACxB,QADtG,eAEI;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,QAAQ,EAAGyB,CAAD,IAAOd,SAAS,CAACc,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjD;AAAmE,QAAA,KAAK,EAAEH,IAAI,CAACtB;AAA/E;AAAA;AAAA;AAAA;AAAA,cAHJ,OAGiGsB,IAAI,CAACtB,QAHtG,eAII;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,QAAQ,EAAGuB,CAAD,IAAOZ,SAAS,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjD;AAAmE,QAAA,KAAK,EAAEH,IAAI,CAACpB;AAA/E;AAAA;AAAA;AAAA;AAAA,cALJ,OAKiGoB,IAAI,CAACpB,QALtG,eAMI;AAAA;AAAA;AAAA;AAAA,cANJ,eAOI;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,QAAQ,EAAGqB,CAAD,IAAOV,SAAS,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAAjD;AAAmE,QAAA,KAAK,EAAEH,IAAI,CAAClB;AAA/E;AAAA;AAAA;AAAA;AAAA,cAPJ,OAOiGkB,IAAI,CAAClB,QAPtG,eASI;AAAA;AAAA;AAAA;AAAA,cATJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAFI,CAAR;AAiBH,GApBD;;AAsBA,QAAMsB,WAAW,GAAG,CAACC,IAAD,EAAOC,IAAP,EAAaC,IAAb,EAAmBC,IAAnB,KAA4B;AAC5C,QAAIlC,IAAI,GAAG,EAAX;AACA,QAAImC,IAAI,GAAG,EAAX;AACA,QAAIC,IAAI,GAAG,EAAX;AACA,QAAIC,IAAI,GAAG,EAAX;AACA,QAAIC,IAAI,GAAG,EAAX;AACA,QAAIf,GAAJ;AACA,QAAIgB,CAAC,GAAG,CAAR;AACAvC,IAAAA,IAAI,GAAIJ,OAAO,CAAC4B,OAAR,CAAgBC,GAAhB,CAAqBC,IAAD,IAAUA,IAAI,CAAC1B,IAAnC,CAAR;AACAmC,IAAAA,IAAI,GAAIvC,OAAO,CAAC4B,OAAR,CAAgBC,GAAhB,CAAqBC,IAAD,IAAUA,IAAI,CAACxB,QAAnC,CAAR;AACAkC,IAAAA,IAAI,GAAIxC,OAAO,CAAC4B,OAAR,CAAgBC,GAAhB,CAAqBC,IAAD,IAAUA,IAAI,CAACtB,QAAnC,CAAR;AACAiC,IAAAA,IAAI,GAAIzC,OAAO,CAAC4B,OAAR,CAAgBC,GAAhB,CAAqBC,IAAD,IAAUA,IAAI,CAACpB,QAAnC,CAAR;AACAgC,IAAAA,IAAI,GAAI1C,OAAO,CAAC4B,OAAR,CAAgBC,GAAhB,CAAqBC,IAAD,IAAUA,IAAI,CAAClB,QAAnC,CAAR;;AAEA,SAAK+B,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGvC,IAAI,CAACwC,MAArB,EAA6BD,CAAC,EAA9B,EAAkC;AAC9B,UAAIJ,IAAI,CAACI,CAAD,CAAJ,KAAYR,IAAZ,IAAoBK,IAAI,CAACG,CAAD,CAAJ,KAAYP,IAAhC,IAAwCK,IAAI,CAACE,CAAD,CAAJ,KAAYN,IAApD,IAA4DK,IAAI,KAAKJ,IAAzE,EAA+E;AAC3EzC,QAAAA,aAAa,GAAGO,IAAI,CAACuC,CAAD,CAApB;AACH,OAFD,MAGK;AACD9C,QAAAA,aAAa,GAAG,iEAAhB;AACH;AACJ;;AAEDG,IAAAA,OAAO,CAAC4B,OAAR,CAAgBC,GAAhB,CAAqBC,IAAD,IAAU;AAC1B,UAAIA,IAAI,CAACxB,QAAL,KAAkB6B,IAAlB,IAA0BL,IAAI,CAACtB,QAAL,KAAkB4B,IAA5C,IAAoDN,IAAI,CAACpB,QAAL,KAAkB2B,IAAtE,IAA8EP,IAAI,CAAClB,QAAL,KAAkB0B,IAApG,EAA0G;AACtGX,QAAAA,GAAG,GAAGG,IAAI,CAAC1B,IAAX;AACH,OAFD,MAGK;AACDuB,QAAAA,GAAG,GAAG,iBAAN;AACH;AACJ,KAPD,EAvB4C,CA+B5C;AACH,GAhCD;;AAmCA,QAAMkB,YAAY,GAAG,MAAM;AAEvB,WACI7C,OAAO,CAAC4B,OAAR,CAAgBC,GAAhB,CAAoB,CAACC,IAAD,EAAOgB,KAAP,kBAChB;AAAA,iBACKhB,IAAI,CAAC1B,IADV,SACmB0B,IAAI,CAACxB,QADxB;AAAA,OAASwC,KAAT;AAAA;AAAA;AAAA;AAAA,YADJ,CADJ;AAQH,GAVD;;AAeA,sBAEI;AAAK,IAAA,SAAS,EAAC,2FAAf;AAAA,6CAII;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAK,MAAA,SAAS,EAAC,8EAAf;AAAA,iBACKpB,iBAAiB,EADtB,EAEKQ,WAAW,CAACpB,MAAD,EAASE,MAAT,EAAiBE,MAAjB,EAAyBE,MAAzB,CAFhB;AAAA;AAAA;AAAA;AAAA;AAAA,YALJ,eAUI;AAAA,8BAAM;AAAG,QAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAN,QAAyDvB,aAAzD;AAAA;AAAA;AAAA;AAAA;AAAA,YAVJ,eAYI;AAAK,MAAA,SAAS,EAAC,gBAAf;AAAA,6BACI,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAZJ;AAAA;AAAA;AAAA;AAAA;AAAA,UAFJ;AAoBH,CAhID;;AAkIA,eAAeE,OAAf","sourcesContent":["import axios from 'axios'\r\nimport { useEffect, useState } from 'react'\r\nimport Footer from '../components/footer'\r\n\r\nlet nameOfDisease = \" \"\r\nconst URL = `http://localhost/api/disease`\r\nconst symptom = () => {\r\n\r\n    const [healths, setHealths] = useState({\r\n        \"disease\": [\r\n            {\r\n                \"id\": 1,\r\n                \"name\": \"โรคหวัดแมว\",\r\n                \"symptom1\": \"อาการเซื่องซึม\",\r\n                \"symptom2\": \"หายใจลำบาก \",\r\n                \"symptom3\": \"มีไข้ ไอ จาม มีน้ำมูก\",\r\n                \"symptom4\": \"เบื่ออาหาร\"\r\n            },\r\n        ]\r\n    });\r\n    const [health, setHealth] = useState([]);\r\n    const [name, setName] = useState('')\r\n    const [symptom1, setSymtom1] = useState('')\r\n    const [symptom2, setSymtom2] = useState('')\r\n    const [symptom3, setSymtom3] = useState('')\r\n    const [symptom4, setSymtom4] = useState('')\r\n\r\n    const [check1, setCheck1] = useState('')\r\n    const [check2, setCheck2] = useState('')\r\n    const [check3, setCheck3] = useState('')\r\n    const [check4, setCheck4] = useState('')\r\n\r\n    useEffect(() => {\r\n        getDisease()\r\n    }, []);\r\n\r\n\r\n    const getDisease = async () => {\r\n        let disesaseCat = await axios.get(URL)\r\n        setHealths(disesaseCat.data)\r\n    }\r\n\r\n    const PrintCheckBoxData = () => {\r\n\r\n        let tmp\r\n        return (healths.disease.map((item) =>\r\n        (\r\n            <div className=\"border-pink-500 border-2 w-1/2 h-full\">\r\n                <input type=\"checkbox\" onChange={(e) => setCheck1(e.target.value)} value={item.symptom1} /> {item.symptom1}\r\n                <br />\r\n                <input type=\"checkbox\" onChange={(e) => setCheck2(e.target.value)} value={item.symptom2} /> {item.symptom2}\r\n                <br />\r\n                <input type=\"checkbox\" onChange={(e) => setCheck3(e.target.value)} value={item.symptom3} /> {item.symptom3}\r\n                <br />\r\n                <input type=\"checkbox\" onChange={(e) => setCheck4(e.target.value)} value={item.symptom4} /> {item.symptom4}\r\n                {/* {new Date().toLocaleString()} */}\r\n                <br />\r\n            </div>\r\n        )\r\n\r\n\r\n        ))\r\n    }\r\n\r\n    const FindDisease = (dis1, dis2, dis3, dis4) => {\r\n        let name = []\r\n        let arr1 = []\r\n        let arr2 = []\r\n        let arr3 = []\r\n        let arr4 = []\r\n        let tmp\r\n        let i = 0\r\n        name = (healths.disease.map((item) => item.name))\r\n        arr1 = (healths.disease.map((item) => item.symptom1))\r\n        arr2 = (healths.disease.map((item) => item.symptom2))\r\n        arr3 = (healths.disease.map((item) => item.symptom3))\r\n        arr4 = (healths.disease.map((item) => item.symptom4))\r\n\r\n        for (i = 0; i < name.length; i++) {\r\n            if (arr1[i] === dis1 && arr2[i] === dis2 && arr3[i] === dis3 || arr4 === dis4) {\r\n                nameOfDisease = name[i]\r\n            }\r\n            else {\r\n                nameOfDisease = \"ขออภัยไม่สามารถตรวจเจอโรคในระบบ / กรุณาติ๊กเลือกตามอาการข้างต้น\"\r\n            }\r\n        }\r\n\r\n        healths.disease.map((item) => {\r\n            if (item.symptom1 === dis1 && item.symptom2 === dis2 && item.symptom3 === dis3 && item.symptom4 === dis4) {\r\n                tmp = item.name\r\n            }\r\n            else {\r\n                tmp = \"ไม่เจอโรคในระบบ\"\r\n            }\r\n        })\r\n        // nameOfDisease = tmp\r\n    }\r\n\r\n\r\n    const printDisease = () => {\r\n\r\n        return (\r\n            healths.disease.map((item, index) => (\r\n                <li key={index}>\r\n                    {item.name} | {item.symptom1}\r\n\r\n                </li>\r\n            ))\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n        \r\n        <div className=\"flex flex-col h-screen w-screen justify-start items-center border-2 border-red-600 fixed \">\r\n            {/* <div className='flex flex-col h-screen justify-between items-center'> */}\r\n            Hello Symptom\r\n            {/* {printDisease()} */}\r\n            <a className='font-bold'>แมวของท่านมีอาการดังนี้หรือไม่ โปรดติ๊กเลือกตามอาการข้างต้น</a>\r\n            <div className=\"flex flex-col items-center border-2 border-red-800 w-2/4 h-2/3 overflow-auto\">\r\n                {PrintCheckBoxData()}\r\n                {FindDisease(check1, check2, check3, check4)}\r\n            </div>\r\n            \r\n            <span><a className='font-bold' >แมวของคุณเป็นโรค :</a>  {nameOfDisease}</span>\r\n\r\n            <div className='w-screen -mt-8'>\r\n                <Footer />\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default symptom"]},"metadata":{},"sourceType":"module"}