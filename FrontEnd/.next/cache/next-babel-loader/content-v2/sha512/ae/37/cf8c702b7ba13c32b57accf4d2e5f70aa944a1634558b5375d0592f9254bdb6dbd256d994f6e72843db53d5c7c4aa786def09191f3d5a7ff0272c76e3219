{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\001Study\\\\Year3Therm2\\\\240-311 Distributed\\\\Final-MiniProject\\\\CatBreeds\\\\FrontEnd\\\\pages\\\\symptom.js\";\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nconst URL = `http://localhost/api/disease`;\n\nconst symptom = () => {\n  const {\n    0: healths,\n    1: setHealths\n  } = useState({\n    \"disease\": [{\n      \"id\": 1,\n      \"name\": \"โรคหวัดแมว\",\n      \"symptom1\": \"อาการเซื่องซึม\",\n      \"symptom2\": \"หายใจลำบาก \",\n      \"symptom3\": \"มีไข้ ไอ จาม มีน้ำมูก\",\n      \"symptom4\": \"เบื่ออาหาร\"\n    }]\n  });\n  const {\n    0: health,\n    1: setHealth\n  } = useState([]);\n  const {\n    0: name,\n    1: setName\n  } = useState('');\n  const {\n    0: symptom1,\n    1: setSymtom1\n  } = useState('');\n  const {\n    0: symptom2,\n    1: setSymtom2\n  } = useState('');\n  const {\n    0: symptom3,\n    1: setSymtom3\n  } = useState('');\n  const {\n    0: symptom4,\n    1: setSymtom4\n  } = useState('');\n  const {\n    0: check1,\n    1: setCheck1\n  } = useState('');\n  useEffect(() => {\n    getDisease();\n  }, []);\n\n  const getDisease = async () => {\n    let disesaseCat = await axios.get(URL);\n    setHealths(disesaseCat.data);\n  };\n\n  const setData = () => {\n    let tmp;\n    healths.disease.map(item => {\n      tmp = item.symptom1;\n      setSymtom1(tmp);\n    });\n  };\n\n  const printDisease = () => {\n    return healths.disease.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [item.name, \" | \", item.symptom1]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Hello Symptom\", printDisease(), setData(), \"Test:\", check1, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      onChange: e => setCheck1(e.target.value),\n      value: setSymtom1\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 12\n    }, this), \" \", symptom1]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n};\n\nexport default symptom;","map":{"version":3,"sources":["D:/001Study/Year3Therm2/240-311 Distributed/Final-MiniProject/CatBreeds/FrontEnd/pages/symptom.js"],"names":["axios","useEffect","useState","URL","symptom","healths","setHealths","health","setHealth","name","setName","symptom1","setSymtom1","symptom2","setSymtom2","symptom3","setSymtom3","symptom4","setSymtom4","check1","setCheck1","getDisease","disesaseCat","get","data","setData","tmp","disease","map","item","printDisease","index","e","target","value"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAGA,MAAMC,GAAG,GAAI,8BAAb;;AACA,MAAMC,OAAO,GAAG,MAAM;AAElB,QAAM;AAAA,OAACC,OAAD;AAAA,OAAUC;AAAV,MAAwBJ,QAAQ,CAAC;AACnC,eAAW,CACP;AACI,YAAM,CADV;AAEI,cAAQ,YAFZ;AAGI,kBAAY,gBAHhB;AAII,kBAAY,aAJhB;AAKI,kBAAY,uBALhB;AAMI,kBAAY;AANhB,KADO;AADwB,GAAD,CAAtC;AAYA,QAAM;AAAA,OAACK,MAAD;AAAA,OAASC;AAAT,MAAsBN,QAAQ,CAAC,EAAD,CAApC;AACA,QAAM;AAAA,OAACO,IAAD;AAAA,OAAOC;AAAP,MAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM;AAAA,OAACS,QAAD;AAAA,OAAWC;AAAX,MAAyBV,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM;AAAA,OAACW,QAAD;AAAA,OAAWC;AAAX,MAAyBZ,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM;AAAA,OAACa,QAAD;AAAA,OAAWC;AAAX,MAAyBd,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM;AAAA,OAACe,QAAD;AAAA,OAAWC;AAAX,MAAyBhB,QAAQ,CAAC,EAAD,CAAvC;AAEA,QAAM;AAAA,OAACiB,MAAD;AAAA,OAASC;AAAT,MAAsBlB,QAAQ,CAAC,EAAD,CAApC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZoB,IAAAA,UAAU;AACb,GAFQ,EAEN,EAFM,CAAT;;AAKA,QAAMA,UAAU,GAAG,YAAY;AAC3B,QAAIC,WAAW,GAAG,MAAMtB,KAAK,CAACuB,GAAN,CAAUpB,GAAV,CAAxB;AACAG,IAAAA,UAAU,CAACgB,WAAW,CAACE,IAAb,CAAV;AACH,GAHD;;AAKA,QAAMC,OAAO,GAAG,MAAO;AAEnB,QAAIC,GAAJ;AACArB,IAAAA,OAAO,CAACsB,OAAR,CAAgBC,GAAhB,CAAqBC,IAAD,IAAU;AAC1BH,MAAAA,GAAG,GAAGG,IAAI,CAAClB,QAAX;AACAC,MAAAA,UAAU,CAACc,GAAD,CAAV;AACH,KAHD;AAIH,GAPD;;AAUA,QAAMI,YAAY,GAAG,MAAM;AAEvB,WACIzB,OAAO,CAACsB,OAAR,CAAgBC,GAAhB,CAAoB,CAACC,IAAD,EAAOE,KAAP,kBAChB;AAAA,iBACKF,IAAI,CAACpB,IADV,SACmBoB,IAAI,CAAClB,QADxB;AAAA,OAASoB,KAAT;AAAA;AAAA;AAAA;AAAA,YADJ,CADJ;AAQH,GAVD;;AAcA,sBACI;AAAA,gCAGKD,YAAY,EAHjB,EAIKL,OAAO,EAJZ,WAKUN,MALV,eAMI;AAAA;AAAA;AAAA;AAAA,YANJ,eAOG;AAAQ,MAAA,IAAI,EAAC,UAAb;AAA0B,MAAA,QAAQ,EAAKa,CAAD,IAAOZ,SAAS,CAACY,CAAC,CAACC,MAAF,CAASC,KAAV,CAAtD;AAAwE,MAAA,KAAK,EAAEtB;AAA/E;AAAA;AAAA;AAAA;AAAA,YAPH,OAOiGD,QAPjG;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAaH,CAtED;;AAwEA,eAAeP,OAAf","sourcesContent":["import axios from 'axios'\r\nimport { useEffect, useState } from 'react'\r\n\r\n\r\nconst URL = `http://localhost/api/disease`\r\nconst symptom = () => {\r\n\r\n    const [healths, setHealths] = useState({\r\n        \"disease\": [\r\n            {\r\n                \"id\": 1,\r\n                \"name\": \"โรคหวัดแมว\",\r\n                \"symptom1\": \"อาการเซื่องซึม\",\r\n                \"symptom2\": \"หายใจลำบาก \",\r\n                \"symptom3\": \"มีไข้ ไอ จาม มีน้ำมูก\",\r\n                \"symptom4\": \"เบื่ออาหาร\"\r\n            },\r\n        ]\r\n    });\r\n    const [health, setHealth] = useState([]);\r\n    const [name, setName] = useState('')\r\n    const [symptom1, setSymtom1] = useState('')\r\n    const [symptom2, setSymtom2] = useState('')\r\n    const [symptom3, setSymtom3] = useState('')\r\n    const [symptom4, setSymtom4] = useState('')\r\n\r\n    const [check1, setCheck1] = useState('')\r\n\r\n    useEffect(() => {\r\n        getDisease()\r\n    }, []);\r\n\r\n\r\n    const getDisease = async () => {\r\n        let disesaseCat = await axios.get(URL)\r\n        setHealths(disesaseCat.data)\r\n    }\r\n\r\n    const setData = () =>  {\r\n        \r\n        let tmp\r\n        healths.disease.map((item) => {\r\n            tmp = item.symptom1\r\n            setSymtom1(tmp)\r\n        })\r\n    }\r\n\r\n\r\n    const printDisease = () => {\r\n\r\n        return (\r\n            healths.disease.map((item, index) => (\r\n                <li key={index}>\r\n                    {item.name} | {item.symptom1} \r\n                    \r\n                </li>\r\n            ))\r\n        )\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            Hello Symptom\r\n\r\n            {printDisease()}\r\n            {setData()}\r\n            Test:{check1}\r\n            <br/>\r\n           <input  type=\"checkbox\"   onChange= { (e) => setCheck1(e.target.value)} value={setSymtom1}/> {symptom1}\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default symptom"]},"metadata":{},"sourceType":"module"}