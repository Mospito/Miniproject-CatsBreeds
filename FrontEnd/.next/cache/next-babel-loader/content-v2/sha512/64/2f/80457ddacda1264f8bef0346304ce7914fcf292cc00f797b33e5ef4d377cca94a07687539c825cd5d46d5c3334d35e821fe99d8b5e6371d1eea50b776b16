{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"D:/001Study/Year3Therm2/240-311 Distributed/Final-MiniProject/CatBreeds/FrontEnd/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"D:/001Study/Year3Therm2/240-311 Distributed/Final-MiniProject/CatBreeds/FrontEnd/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"D:\\\\001Study\\\\Year3Therm2\\\\240-311 Distributed\\\\Final-MiniProject\\\\CatBreeds\\\\FrontEnd\\\\pages\\\\symptom.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nvar URL = \"http://localhost/api/disease\";\n\nvar symptom = function symptom() {\n  _s();\n\n  var _useState = useState({\n    \"disease\": [{\n      \"id\": 1,\n      \"name\": \"โรคหวัดแมว\",\n      \"symptom1\": \"อาการเซื่องซึม\",\n      \"symptom2\": \"หายใจลำบาก \",\n      \"symptom3\": \"มีไข้ ไอ จาม มีน้ำมูก\",\n      \"symptom4\": \"เบื่ออาหาร\"\n    }]\n  }),\n      healths = _useState[0],\n      setHealths = _useState[1];\n\n  var _useState2 = useState([]),\n      health = _useState2[0],\n      setHealth = _useState2[1];\n\n  var _useState3 = useState(''),\n      name = _useState3[0],\n      setName = _useState3[1];\n\n  var _useState4 = useState(''),\n      symptom1 = _useState4[0],\n      setSymtom1 = _useState4[1];\n\n  var _useState5 = useState(''),\n      symptom2 = _useState5[0],\n      setSymtom2 = _useState5[1];\n\n  var _useState6 = useState(''),\n      symptom3 = _useState6[0],\n      setSymtom3 = _useState6[1];\n\n  var _useState7 = useState(''),\n      symptom4 = _useState7[0],\n      setSymtom4 = _useState7[1];\n\n  var _useState8 = useState(''),\n      check1 = _useState8[0],\n      setCheck1 = _useState8[1];\n\n  useEffect(function () {\n    getDisease();\n  }, []);\n\n  var getDisease = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var disesaseCat;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return axios.get(URL);\n\n            case 2:\n              disesaseCat = _context.sent;\n              setHealths(disesaseCat.data);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getDisease() {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var printDisease = function printDisease() {\n    return healths.disease.map(function (item, index) {\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [item.name, \" | \", item.symptom1]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, _this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [\"Hello Symptom\", printDisease(), \"Test:\", check1, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"checkbox\",\n      onChange: function onChange(e) {\n        return setCheck1(e.target.value);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 12\n    }, _this), \" \", symptom1]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(symptom, \"YZa2WYgnee/xN2Xqf2uqO/cHCTo=\");\n\nexport default symptom;","map":{"version":3,"sources":["D:/001Study/Year3Therm2/240-311 Distributed/Final-MiniProject/CatBreeds/FrontEnd/pages/symptom.js"],"names":["axios","useEffect","useState","URL","symptom","healths","setHealths","health","setHealth","name","setName","symptom1","setSymtom1","symptom2","setSymtom2","symptom3","setSymtom3","symptom4","setSymtom4","check1","setCheck1","getDisease","get","disesaseCat","data","printDisease","disease","map","item","index","e","target","value"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAGA,IAAMC,GAAG,iCAAT;;AACA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AAAA,kBAEYF,QAAQ,CAAC;AACnC,eAAW,CACP;AACI,YAAM,CADV;AAEI,cAAQ,YAFZ;AAGI,kBAAY,gBAHhB;AAII,kBAAY,aAJhB;AAKI,kBAAY,uBALhB;AAMI,kBAAY;AANhB,KADO;AADwB,GAAD,CAFpB;AAAA,MAEXG,OAFW;AAAA,MAEFC,UAFE;;AAAA,mBAcUJ,QAAQ,CAAC,EAAD,CAdlB;AAAA,MAcXK,MAdW;AAAA,MAcHC,SAdG;;AAAA,mBAeMN,QAAQ,CAAC,EAAD,CAfd;AAAA,MAeXO,IAfW;AAAA,MAeLC,OAfK;;AAAA,mBAgBaR,QAAQ,CAAC,EAAD,CAhBrB;AAAA,MAgBXS,QAhBW;AAAA,MAgBDC,UAhBC;;AAAA,mBAiBaV,QAAQ,CAAC,EAAD,CAjBrB;AAAA,MAiBXW,QAjBW;AAAA,MAiBDC,UAjBC;;AAAA,mBAkBaZ,QAAQ,CAAC,EAAD,CAlBrB;AAAA,MAkBXa,QAlBW;AAAA,MAkBDC,UAlBC;;AAAA,mBAmBad,QAAQ,CAAC,EAAD,CAnBrB;AAAA,MAmBXe,QAnBW;AAAA,MAmBDC,UAnBC;;AAAA,mBAqBUhB,QAAQ,CAAC,EAAD,CArBlB;AAAA,MAqBXiB,MArBW;AAAA,MAqBHC,SArBG;;AAuBlBnB,EAAAA,SAAS,CAAC,YAAM;AACZoB,IAAAA,UAAU;AACb,GAFQ,EAEN,EAFM,CAAT;;AAKA,MAAMA,UAAU;AAAA,wEAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBACSrB,KAAK,CAACsB,GAAN,CAAUnB,GAAV,CADT;;AAAA;AACXoB,cAAAA,WADW;AAEfjB,cAAAA,UAAU,CAACiB,WAAW,CAACC,IAAb,CAAV;;AAFe;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAVH,UAAU;AAAA;AAAA;AAAA,KAAhB;;AAQA,MAAMI,YAAY,GAAG,SAAfA,YAAe,GAAM;AAEvB,WACIpB,OAAO,CAACqB,OAAR,CAAgBC,GAAhB,CAAoB,UAACC,IAAD,EAAOC,KAAP;AAAA,0BAChB;AAAA,mBACKD,IAAI,CAACnB,IADV,SACmBmB,IAAI,CAACjB,QADxB;AAAA,SAASkB,KAAT;AAAA;AAAA;AAAA;AAAA,eADgB;AAAA,KAApB,CADJ;AAQH,GAVD;;AAcA,sBACI;AAAA,gCAGKJ,YAAY,EAHjB,WAIUN,MAJV,eAKI;AAAA;AAAA;AAAA;AAAA,aALJ,eAMG;AAAQ,MAAA,IAAI,EAAC,UAAb;AAA0B,MAAA,QAAQ,EAAI,kBAACW,CAAD;AAAA,eAAOV,SAAS,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAAhB;AAAA;AAAtC;AAAA;AAAA;AAAA;AAAA,aANH,OAM8ErB,QAN9E;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ;AAYH,CA9DD;;GAAMP,O;;AAgEN,eAAeA,OAAf","sourcesContent":["import axios from 'axios'\r\nimport { useEffect, useState } from 'react'\r\n\r\n\r\nconst URL = `http://localhost/api/disease`\r\nconst symptom = () => {\r\n\r\n    const [healths, setHealths] = useState({\r\n        \"disease\": [\r\n            {\r\n                \"id\": 1,\r\n                \"name\": \"โรคหวัดแมว\",\r\n                \"symptom1\": \"อาการเซื่องซึม\",\r\n                \"symptom2\": \"หายใจลำบาก \",\r\n                \"symptom3\": \"มีไข้ ไอ จาม มีน้ำมูก\",\r\n                \"symptom4\": \"เบื่ออาหาร\"\r\n            },\r\n        ]\r\n    });\r\n    const [health, setHealth] = useState([]);\r\n    const [name, setName] = useState('')\r\n    const [symptom1, setSymtom1] = useState('')\r\n    const [symptom2, setSymtom2] = useState('')\r\n    const [symptom3, setSymtom3] = useState('')\r\n    const [symptom4, setSymtom4] = useState('')\r\n\r\n    const [check1, setCheck1] = useState('')\r\n\r\n    useEffect(() => {\r\n        getDisease()\r\n    }, []);\r\n\r\n\r\n    const getDisease = async () => {\r\n        let disesaseCat = await axios.get(URL)\r\n        setHealths(disesaseCat.data)\r\n    }\r\n\r\n    \r\n\r\n\r\n    const printDisease = () => {\r\n\r\n        return (\r\n            healths.disease.map((item, index) => (\r\n                <li key={index}>\r\n                    {item.name} | {item.symptom1}\r\n                    \r\n                </li>\r\n            ))\r\n        )\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div>\r\n            Hello Symptom\r\n\r\n            {printDisease()}\r\n            Test:{check1}\r\n            <br/>\r\n           <input  type=\"checkbox\"   onChange= { (e) => setCheck1(e.target.value)}/> {symptom1}\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default symptom"]},"metadata":{},"sourceType":"module"}