{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\001Study\\\\Year3Therm2\\\\240-311 Distributed\\\\Final-MiniProject\\\\CatBreeds\\\\FrontEnd\\\\pages\\\\symptom.js\";\nimport axios from 'axios';\nimport { useEffect, useRef, useState } from 'react';\nimport Footer from '../components/footer';\nimport Image from 'next/image';\nlet nameOfDisease = \" \";\nconst URL = `http://localhost/api/disease`;\n\nconst symptom = () => {\n  const {\n    0: healths,\n    1: setHealths\n  } = useState({\n    \"disease\": [{\n      \"id\": 1,\n      \"name\": \"โรคหวัดแมว\",\n      \"symptom1\": \"อาการเซื่องซึม\",\n      \"symptom2\": \"หายใจลำบาก \",\n      \"symptom3\": \"มีไข้ ไอ จาม มีน้ำมูก\",\n      \"symptom4\": \"เบื่ออาหาร\"\n    }]\n  });\n  const {\n    0: health,\n    1: setHealth\n  } = useState([]);\n  const {\n    0: name,\n    1: setName\n  } = useState('');\n  const {\n    0: symptom1,\n    1: setSymtom1\n  } = useState('');\n  const {\n    0: symptom2,\n    1: setSymtom2\n  } = useState('');\n  const {\n    0: symptom3,\n    1: setSymtom3\n  } = useState('');\n  const {\n    0: symptom4,\n    1: setSymtom4\n  } = useState('');\n  const {\n    0: check1,\n    1: setCheck1\n  } = useState('');\n  const {\n    0: check2,\n    1: setCheck2\n  } = useState('');\n  const {\n    0: check3,\n    1: setCheck3\n  } = useState('');\n  const {\n    0: check4,\n    1: setCheck4\n  } = useState('');\n  useEffect(() => {\n    getDisease();\n  }, []);\n\n  const getDisease = async () => {\n    let disesaseCat = await axios.get(URL);\n    setHealths(disesaseCat.data);\n  };\n\n  const PrintCheckBoxData = () => {\n    return healths.disease.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col justify-center items-start w-1/2 h-1/3\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          onChange: e => setCheck1(e.target.value),\n          value: item.symptom1\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 21\n        }, this), \" \", item.symptom1, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          onChange: e => setCheck2(e.target.value),\n          value: item.symptom2\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), \" \", item.symptom2, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          onChange: e => setCheck3(e.target.value),\n          value: item.symptom3\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this), \" \", item.symptom3, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          onChange: e => setCheck4(e.target.value),\n          value: item.symptom4\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), \" \", item.symptom4, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this)\n    }, index, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this));\n  };\n\n  const FindDisease = (dis1, dis2, dis3, dis4) => {\n    console.log(\"Test dis: \", dis1, dis2, dis3, dis4);\n    healths.disease.map(item => {\n      if (item.symptom1 === dis1 && item.symptom2 === dis2 && item.symptom3 === dis3 && item.symptom4 === dis4) {\n        setName(item.name);\n      } else {}\n    });\n  };\n\n  const printDisease = () => {\n    return healths.disease.map((item, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n      children: [item.name, \" | \", item.symptom1]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }, this));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col h-screen w-screen justify-start items-center  fixed mt-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"title\", {\n      children: \"Cat-Symptom\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"border-2 border-green-900 bg-green-300 font-bold text-3xl p-2 rounded-lg\",\n      children: \"\\u0E22\\u0E34\\u0E19\\u0E14\\u0E35\\u0E15\\u0E49\\u0E2D\\u0E19\\u0E23\\u0E31\\u0E1A\\u0E40\\u0E02\\u0E49\\u0E32\\u0E2A\\u0E39\\u0E48\\u0E23\\u0E30\\u0E1A\\u0E1A\\u0E15\\u0E23\\u0E27\\u0E08\\u0E2A\\u0E2D\\u0E1A\\u0E42\\u0E23\\u0E04\\u0E02\\u0E2D\\u0E07\\u0E41\\u0E21\\u0E27\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n      className: \"text-lg text-green-800 font-bold mt-5\",\n      children: \"\\u0E41\\u0E21\\u0E27\\u0E02\\u0E2D\\u0E07\\u0E17\\u0E48\\u0E32\\u0E19\\u0E21\\u0E35\\u0E2D\\u0E32\\u0E01\\u0E32\\u0E23\\u0E14\\u0E31\\u0E07\\u0E19\\u0E35\\u0E49\\u0E2B\\u0E23\\u0E37\\u0E2D\\u0E44\\u0E21\\u0E48 \\u0E42\\u0E1B\\u0E23\\u0E14\\u0E15\\u0E34\\u0E4A\\u0E01\\u0E40\\u0E25\\u0E37\\u0E2D\\u0E01\\u0E15\\u0E32\\u0E21\\u0E2D\\u0E32\\u0E01\\u0E32\\u0E23\\u0E02\\u0E49\\u0E32\\u0E07\\u0E15\\u0E49\\u0E19\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex flex-col items-center w-2/4 h-2/4 overflow-auto mt-5 border-4 border-green-800 border-dashed bg-green-200 rounded-xl\",\n      children: [PrintCheckBoxData(), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"bg-green-900 hover:bg-green-700 text-white font-bold py-2 px-4 rounded-full w-28 mb-4 focus:outline-none\",\n        onClick: () => {\n          {\n            FindDisease(check1, check2, check3, check4);\n          }\n        },\n        children: \"Find\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      className: \"text-xl mt-5 border-4 border-green-700 p-2 rounded-md\",\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        className: \"font-bold \",\n        children: \"\\u0E41\\u0E21\\u0E27\\u0E02\\u0E2D\\u0E07\\u0E04\\u0E38\\u0E13\\u0E2D\\u0E32\\u0E08\\u0E40\\u0E1B\\u0E47\\u0E19\\u0E42\\u0E23\\u0E04 :\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 85\n      }, this), name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"w-screen -mt-8\",\n      children: /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 9\n  }, this);\n};\n\nexport default symptom;","map":{"version":3,"sources":["D:/001Study/Year3Therm2/240-311 Distributed/Final-MiniProject/CatBreeds/FrontEnd/pages/symptom.js"],"names":["axios","useEffect","useRef","useState","Footer","Image","nameOfDisease","URL","symptom","healths","setHealths","health","setHealth","name","setName","symptom1","setSymtom1","symptom2","setSymtom2","symptom3","setSymtom3","symptom4","setSymtom4","check1","setCheck1","check2","setCheck2","check3","setCheck3","check4","setCheck4","getDisease","disesaseCat","get","data","PrintCheckBoxData","disease","map","item","index","e","target","value","FindDisease","dis1","dis2","dis3","dis4","console","log","printDisease"],"mappings":"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","sourcesContent":["import axios from 'axios'\r\nimport { useEffect, useRef, useState } from 'react'\r\nimport Footer from '../components/footer'\r\nimport Image from 'next/image'\r\n\r\nlet nameOfDisease = \" \"\r\n\r\n\r\nconst URL = `http://localhost/api/disease`\r\nconst symptom = () => {\r\n\r\n    const [healths, setHealths] = useState({\r\n        \"disease\": [\r\n            {\r\n                \"id\": 1,\r\n                \"name\": \"โรคหวัดแมว\",\r\n                \"symptom1\": \"อาการเซื่องซึม\",\r\n                \"symptom2\": \"หายใจลำบาก \",\r\n                \"symptom3\": \"มีไข้ ไอ จาม มีน้ำมูก\",\r\n                \"symptom4\": \"เบื่ออาหาร\"\r\n            },\r\n        ]\r\n    });\r\n    const [health, setHealth] = useState([]);\r\n    const [name, setName] = useState('')\r\n    const [symptom1, setSymtom1] = useState('')\r\n    const [symptom2, setSymtom2] = useState('')\r\n    const [symptom3, setSymtom3] = useState('')\r\n    const [symptom4, setSymtom4] = useState('')\r\n\r\n    const [check1, setCheck1] = useState('')\r\n    const [check2, setCheck2] = useState('')\r\n    const [check3, setCheck3] = useState('')\r\n    const [check4, setCheck4] = useState('')\r\n\r\n    useEffect(() => {\r\n        getDisease()\r\n\r\n\r\n    }, []);\r\n\r\n\r\n    const getDisease = async () => {\r\n        let disesaseCat = await axios.get(URL)\r\n        setHealths(disesaseCat.data)\r\n\r\n\r\n    }\r\n\r\n    const PrintCheckBoxData = () => {\r\n\r\n\r\n        return (healths.disease.map((item, index) =>\r\n        (\r\n            <div className=\"flex flex-col justify-center items-start w-1/2 h-1/3\" key={index}>\r\n                <div>\r\n                    <input type=\"checkbox\" onChange={(e) => setCheck1(e.target.value)} value={item.symptom1} /> {item.symptom1}\r\n                    <br />\r\n                    <input type=\"checkbox\" onChange={(e) => setCheck2(e.target.value)} value={item.symptom2} /> {item.symptom2}\r\n                    <br />\r\n                    <input type=\"checkbox\" onChange={(e) => setCheck3(e.target.value)} value={item.symptom3} /> {item.symptom3}\r\n                    <br />\r\n                    <input type=\"checkbox\" onChange={(e) => setCheck4(e.target.value)} value={item.symptom4} /> {item.symptom4}\r\n                    <br />\r\n                </div>\r\n\r\n\r\n            </div>\r\n        )\r\n\r\n\r\n        ))\r\n    }\r\n\r\n    const FindDisease = (dis1, dis2, dis3, dis4) => {\r\n\r\n        console.log(\"Test dis: \", dis1, dis2, dis3, dis4);\r\n\r\n        healths.disease.map((item) => {\r\n            if (item.symptom1 === dis1 && item.symptom2 === dis2 && item.symptom3 === dis3 && item.symptom4 === dis4) {\r\n                setName(item.name)\r\n            }\r\n            else {\r\n\r\n\r\n            }\r\n        })\r\n\r\n\r\n    }\r\n\r\n\r\n    const printDisease = () => {\r\n\r\n        return (\r\n            healths.disease.map((item, index) => (\r\n                <li key={index}>\r\n                    {item.name} | {item.symptom1}\r\n\r\n                </li>\r\n            ))\r\n        )\r\n    }\r\n\r\n\r\n\r\n\r\n    return (\r\n\r\n        <div className=\"flex flex-col h-screen w-screen justify-start items-center  fixed mt-5\">\r\n            <title>Cat-Symptom</title>\r\n\r\n\r\n            {/* <div className='flex flex-col h-screen justify-between items-center'> */}\r\n            <h1 className='border-2 border-green-900 bg-green-300 font-bold text-3xl p-2 rounded-lg'>ยินดีต้อนรับเข้าสู่ระบบตรวจสอบโรคของแมว</h1>\r\n            {/* {printDisease()} */}\r\n\r\n            <a className='text-lg text-green-800 font-bold mt-5'>แมวของท่านมีอาการดังนี้หรือไม่ โปรดติ๊กเลือกตามอาการข้างต้น</a>\r\n            <div className=\"flex flex-col items-center w-2/4 h-2/4 overflow-auto mt-5 border-4 border-green-800 border-dashed bg-green-200 rounded-xl\">\r\n                {PrintCheckBoxData()}\r\n\r\n                <button className='bg-green-900 hover:bg-green-700 text-white font-bold py-2 px-4 rounded-full w-28 mb-4 focus:outline-none' onClick={() => { { FindDisease(check1, check2, check3, check4) } }}>Find</button>\r\n\r\n            </div>\r\n            <span className=\"text-xl mt-5 border-4 border-green-700 p-2 rounded-md\"><a className='font-bold ' >แมวของคุณอาจเป็นโรค :</a>{name}</span>\r\n            <div className='w-screen -mt-8'>\r\n                <Footer />\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default symptom"]},"metadata":{},"sourceType":"module"}