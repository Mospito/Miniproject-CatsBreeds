{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\001Study\\\\Year3Therm2\\\\240-311 Distributed\\\\MiniProJect\\\\FrontEnd\\\\mini-project\\\\pages\\\\index.js\";\nimport Head from 'next/head';\nimport styles from '../styles/Home.module.css';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport Autocomplete from '../components/Autocomplete';\nconst URL = `https://api.thecatapi.com/v1/breeds`;\nconst imgURL = `https://api.thecatapi.com/v1/images`;\nexport default function Home() {\n  const {\n    0: cats,\n    1: setCats\n  } = useState([]);\n  const {\n    0: image,\n    1: setImage\n  } = useState({});\n  const {\n    0: find,\n    1: setFind\n  } = useState('');\n  const {\n    0: refimg,\n    1: setRefimg\n  } = useState('');\n  const {\n    0: nameCat,\n    1: setNameCat\n  } = useState('');\n  const {\n    0: temperament,\n    1: setTemperament\n  } = useState('');\n  const {\n    0: origin,\n    1: setOrigin\n  } = useState('');\n  const {\n    0: description,\n    1: setDescription\n  } = useState('');\n  const {\n    0: life_span,\n    1: setLife_span\n  } = useState('');\n  const {\n    0: auto,\n    1: setAuto\n  } = useState([]);\n  useEffect(() => {\n    getCats();\n  }, []);\n\n  const getImage = async id => {\n    let imp = await axios.get(`${imgURL}/${id}`);\n    setImage(imp.data);\n  };\n\n  const getCats = async () => {\n    let cat = await axios.get(URL);\n    setCats(cat.data);\n  };\n\n  const search = async name => {\n    cats.map((item, index) => {\n      if (name === item.name) {\n        setRefimg(item.reference_image_id);\n        setNameCat(item.name);\n        setTemperament(item.temperament);\n        setOrigin(item.origin);\n        setDescription(item.description);\n        setLife_span(item.life_span);\n        getImage(refimg);\n      }\n    });\n  };\n\n  const printCats = () => {\n    return cats.map((item, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Breed: \", item.name, /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => getImage(item.reference_image_id),\n        children: \"Get\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this));\n  };\n\n  const scandName = () => {\n    let tmp;\n    cats.map(item => {\n      tmp = item.name;\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: tmp\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: styles.container,\n    children: [\"Hello img: \", /*#__PURE__*/_jsxDEV(\"img\", {\n      src: image.url,\n      width: \"300\",\n      height: \"300\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 12\n    }, this), printCats(), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: image.url,\n        width: \"300\",\n        height: \"300\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), \"name: \", nameCat, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), \"temperament: \", temperament, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), \"origin: \", origin, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), \"description: \", description, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), \"life span: \", life_span, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), \"Find: \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        onChange: e => setFind(e.target.value),\n        autoComplete: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 15\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => search(find),\n        children: \"Find!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [scandName(), /*#__PURE__*/_jsxDEV(Autocomplete, {\n        suggestions: []\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}","map":{"version":3,"sources":["D:/001Study/Year3Therm2/240-311 Distributed/MiniProJect/FrontEnd/mini-project/pages/index.js"],"names":["Head","styles","useState","useEffect","axios","Autocomplete","URL","imgURL","Home","cats","setCats","image","setImage","find","setFind","refimg","setRefimg","nameCat","setNameCat","temperament","setTemperament","origin","setOrigin","description","setDescription","life_span","setLife_span","auto","setAuto","getCats","getImage","id","imp","get","data","cat","search","name","map","item","index","reference_image_id","printCats","scandName","tmp","container","url","e","target","value"],"mappings":"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","sourcesContent":["import Head from 'next/head'\nimport styles from '../styles/Home.module.css'\nimport { useState, useEffect } from 'react'\nimport axios from 'axios'\nimport Autocomplete from '../components/Autocomplete'\n\nconst URL = `https://api.thecatapi.com/v1/breeds`\nconst imgURL = `https://api.thecatapi.com/v1/images`\n\n\nexport default function Home() {\n\n  const [cats, setCats] = useState([]);\n  const [image, setImage] = useState({});\n  const [find, setFind] = useState('');\n  const [refimg, setRefimg] = useState('')\n  const [nameCat, setNameCat] = useState('')\n  const [temperament, setTemperament] = useState('')\n  const [origin, setOrigin] = useState('')\n  const [description, setDescription] = useState('')\n  const [life_span, setLife_span] = useState('')\n  const [auto, setAuto] = useState([])\n\n\n  useEffect(() => {\n    getCats()\n  }, []);\n\n  const getImage = async (id) => {\n    let imp = await axios.get(`${imgURL}/${id}`)\n    setImage(imp.data)\n  }\n\n  const getCats = async () => {\n    let cat = await axios.get(URL)\n    setCats(cat.data)\n  }\n\n  const search = async (name) => {\n\n    cats.map((item, index) => {\n      if (name === item.name) {\n        setRefimg(item.reference_image_id)\n        setNameCat(item.name)\n        setTemperament(item.temperament)\n        setOrigin(item.origin)\n        setDescription(item.description)\n        setLife_span(item.life_span)\n        getImage(refimg)\n      }\n\n    })\n\n  }\n\n  const printCats = () => {\n    return (cats.map((item, index) => (\n      <div>\n        {/* Test: {item.name} |\n        weight: {item.weight.metric}\n        <img src={item.image.url} alt=\"\" /> */}\n        {/* {(item.name === \"Abyssinian\")?<img src=\"https://cdn2.thecatapi.com/images/0XYvRd7oD.jpg\"/>:\"null\"} */}\n        Breed: {item.name}\n\n        <button onClick={() => getImage(item.reference_image_id)}>Get</button>\n\n\n      </div>\n    )))\n  }\n\n  const scandName = () => {\n    let tmp;\n    cats.map((item) => {\n      tmp = item.name\n      \n      return (\n        <li>\n          {tmp}\n        </li>\n      )\n    })\n  }\n\n  return (\n    <div className={styles.container}>\n      Hello\n      img: <img src={image.url} width=\"300\" height=\"300\" />\n      {printCats()}\n\n      <div>\n        <img src={image.url} width=\"300\" height=\"300\" />\n        <br></br>\n        name: {nameCat}\n        <br></br>\n        temperament: {temperament}\n        <br></br>\n        origin: {origin}\n        <br></br>\n        description: {description}\n        <br></br>\n        life span: {life_span}\n        <br></br>\n        Find: <input type=\"text\" onChange={(e) => setFind(e.target.value)} autoComplete=\"name\" />\n        <button onClick={() => search(find)}>Find!</button>\n      </div>\n\n      <div>\n\n        {scandName()}\n        <Autocomplete\n          suggestions={[]}\n        />\n      </div>\n    </div>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}